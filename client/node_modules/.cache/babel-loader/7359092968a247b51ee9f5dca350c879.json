{"ast":null,"code":"var _jsxFileName = \"E:\\\\blog_post\\\\client\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './PostForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [author, setAuthor] = useState('');\n  const [createdAt, setCreatedAt] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (id) {\n      const fetchPost = async () => {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/posts/${id}`);\n          setTitle(res.data.title);\n          setContent(res.data.content);\n          setAuthor(res.data.author);\n          setCreatedAt(new Date(res.data.createdAt).toLocaleString());\n        } catch (error) {\n          console.error(\"Error fetching post:\", error);\n          alert('Failed to fetch the post for editing. Please try again.');\n        }\n      };\n      fetchPost();\n    } else {\n      setCreatedAt(new Date().toLocaleString());\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !content || !author) {\n      alert('Please fill in all fields');\n      return;\n    }\n    const postData = {\n      title,\n      content,\n      author\n    };\n    try {\n      if (id) {\n        await axios.put(`http://localhost:5000/api/posts/${id}`, postData);\n        alert('Post updated successfully!');\n      } else {\n        await axios.post('http://localhost:5000/api/posts', postData);\n        alert('Post created successfully!');\n      }\n      navigate('/');\n    } catch (error) {\n      console.error('Error saving post:', error);\n      alert(`An error occurred while ${id ? 'updating' : 'creating'} the post: ${error.response ? error.response.data.message : error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id ? 'Edit Post' : 'Create New Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"createdAt\",\n        children: \"Created At:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"createdAt\",\n        value: createdAt,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [id ? 'Update' : 'Create', \" Post\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"xYcTVcUD0bKfxeTgSlSG9h32Lgw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","PostForm","_s","title","setTitle","content","setContent","author","setAuthor","createdAt","setCreatedAt","id","navigate","fetchPost","res","get","data","Date","toLocaleString","error","console","alert","handleSubmit","e","preventDefault","postData","put","post","response","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","required","readOnly","_c","$RefreshReg$"],"sources":["E:/blog_post/client/src/components/PostForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './PostForm.css';\r\n\r\nfunction PostForm() {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [createdAt, setCreatedAt] = useState('');\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchPost = async () => {\r\n        try {\r\n          const res = await axios.get(`http://localhost:5000/api/posts/${id}`);\r\n          setTitle(res.data.title);\r\n          setContent(res.data.content);\r\n          setAuthor(res.data.author);\r\n          setCreatedAt(new Date(res.data.createdAt).toLocaleString());\r\n        } catch (error) {\r\n          console.error(\"Error fetching post:\", error);\r\n          alert('Failed to fetch the post for editing. Please try again.');\r\n        }\r\n      };\r\n      fetchPost();\r\n    } else {\r\n      setCreatedAt(new Date().toLocaleString());\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content || !author) {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    const postData = { title, content, author };\r\n    try {\r\n      if (id) {\r\n        await axios.put(`http://localhost:5000/api/posts/${id}`, postData);\r\n        alert('Post updated successfully!');\r\n      } else {\r\n        await axios.post('http://localhost:5000/api/posts', postData);\r\n        alert('Post created successfully!');\r\n      }\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error saving post:', error);\r\n      alert(`An error occurred while ${id ? 'updating' : 'creating'} the post: ${error.response ? error.response.data.message : error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"post-form\">\r\n      <h2>{id ? 'Edit Post' : 'Create New Post'}</h2>\r\n      <div>\r\n        <label htmlFor=\"title\">Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"content\">Content:</label>\r\n        <textarea\r\n          id=\"content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"author\">Author:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"author\"\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"createdAt\">Created At:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"createdAt\"\r\n          value={createdAt}\r\n          readOnly\r\n        />\r\n      </div>\r\n      <button type=\"submit\">{id ? 'Update' : 'Create'} Post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}